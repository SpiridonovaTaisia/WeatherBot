import logging

import requests
from aiogram import Bot, Dispatcher, types, executor

API_TOKEN = '7909948711:AAHCkKp-WPjLWCq9pKDeJ5VR68EiXqax2gg'
API_OPEN_WEATHER = "388a7424c90199acd682f5b99c95c7a7"
# Configure logging
logging.basicConfig(level=logging.DEBUG)

# Initialize bot and dispatcher
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)


@dp.message_handler(commands=['start', 'help'])
async def send_welcome(message: types.Message):
    """
    This handler will be called when user sends `/start` or `/help` command
    """
    await message.reply("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ü–æ–≥–æ–¥—ã!")


def get_weather_samara():
    city = '–°–∞–º–∞—Ä–∞'
    url = f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_OPEN_WEATHER}&units=metric&lang=ru'
    response = requests.get(url)
    if response.status_code == 200:
        data = response.json()
        temp = data['main']['temp']
        feels_like = data['main']['feels_like']
        weather_desc = data['weather'][0]['description'].capitalize()
        humidity = data['main']['humidity']
        wind_speed = data['wind']['speed']
        city_name = data['name']
        country = data['sys']['country']
        result = (
            f'üå§ –ü–æ–≥–æ–¥–∞ –≤ {city_name}, {country}:\n'
            f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp}¬∞C (–æ—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ {feels_like}¬∞C)\n'
            f'–û–ø–∏—Å–∞–Ω–∏–µ: {weather_desc}\n'
            f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n'
            f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º/—Å'
        )
        return result
    else:
        return '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ.'

@dp.message_handler(commands=['echo'])
async def echo(message: types.Message):

    await message.answer(message.text)


@dp.message_handler(commands=['weather'])
async def weather(message: types.Message):
    weather = get_weather_samara()
    await message.answer(weather)


if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
